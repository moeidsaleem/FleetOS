// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Driver {
  id              String   @id @default(uuid())
  uberDriverId    String   @unique
  name            String
  phone           String
  whatsappNumber  String?
  telegramUserId  String?
  email           String   @unique
  language        Language @default(ENGLISH)
  status          DriverStatus @default(ACTIVE)
  joinedAt        DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  metrics         DriverMetrics[]
  alerts          AlertRecord[]
  driverDocuments DriverDocument[]
  driverNotes     DriverNote[]
  
  @@index([status])
  @@index([joinedAt])
  @@index([language])
  @@map("drivers")
}

model DriverMetrics {
  id               String   @id @default(uuid())
  driverId         String
  date             DateTime @db.Date
  acceptanceRate   Float
  cancellationRate Float
  completionRate   Float
  feedbackScore    Float
  tripVolumeIndex  Float
  idleRatio        Float
  calculatedScore  Float
  createdAt        DateTime @default(now())
  analyticsMetrics Json?

  // Relations
  driver           Driver   @relation(fields: [driverId], references: [id], onDelete: Cascade)

  @@unique([driverId, date])
  @@index([driverId, date])
  @@index([calculatedScore])
  @@map("driver_metrics")
}

model AlertRecord {
  id          String       @id @default(uuid())
  driverId    String
  alertType   AlertType
  priority    AlertPriority
  reason      String
  message     String
  status      AlertStatus  @default(PENDING)
  sentAt      DateTime?
  deliveredAt DateTime?
  readAt      DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  triggeredBy TriggeredBy  @default(MANUAL)
  error       String?
  conversationId String? // ElevenLabs conversation ID for AI calls
  promptVersion Int?
  // Relations
  driver      Driver       @relation(fields: [driverId], references: [id], onDelete: Cascade)
  @@map("alert_records")
}

model AlertRule {
  id              String   @id @default(uuid())
  name            String
  description     String
  isActive        Boolean  @default(true)
  conditions      Json     // Store alert conditions as JSON
  actions         Json     // Store alert actions as JSON
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("alert_rules")
}

model NotificationTemplate {
  id          String      @id @default(uuid())
  name        String
  type        AlertType
  subject     String?
  content     String
  variables   String[]
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("notification_templates")
}

model SystemConfig {
  id        String   @id @default(uuid())
  key       String   @unique
  value     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("system_config")
}

model UberSyncLog {
  id           String   @id @default(uuid())
  startedAt    DateTime @default(now())
  finishedAt   DateTime?
  status       String   // 'SUCCESS', 'FAILURE', 'PARTIAL', etc.
  type         String   // 'AUTO', 'MANUAL', 'DRIVER', etc.
  driversProcessed Int   @default(0)
  driversCreated   Int   @default(0)
  driversUpdated   Int   @default(0)
  errorMessage  String? // Error details if any
  createdBy     String? // User or system
  createdAt     DateTime @default(now())
}

// AUTH: User model and Role enum
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(VIEWER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  emailVerified DateTime?
}

enum Role {
  ADMIN
  MANAGER
  VIEWER
}

// Enums
enum DriverStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum Language {
  ENGLISH
  ARABIC
  HINDI
  URDU
  FRENCH
  RUSSIAN
  TAGALOG
  SPANISH
}

enum AlertType {
  WHATSAPP
  TELEGRAM
  CALL
  EMAIL
}

enum AlertStatus {
  PENDING
  SENT
  DELIVERED
  FAILED
  READ
}

enum AlertPriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum SyncStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
}

// --- Driver Document Uploads ---
model DriverDocument {
  id          String      @id @default(uuid())
  driverId    String
  type        DocumentType
  fileName    String
  filePath    String
  expiryDate  DateTime?
  uploadedAt  DateTime    @default(now())
  uploadedBy  String?
  status      DocumentStatus @default(VALID)

  // Relations
  driver      Driver      @relation(fields: [driverId], references: [id], onDelete: Cascade)

  @@map("driver_documents")
  @@index([driverId])
}

enum DocumentType {
  LICENSE
  EMIRATES_ID
  VISA
  INSURANCE
  OTHER
}

enum DocumentStatus {
  VALID
  EXPIRED
  EXPIRING_SOON
}

model DriverNote {
  id        String   @id @default(uuid())
  driverId  String
  author    String
  content   String
  createdAt DateTime @default(now())

  driver    Driver   @relation(fields: [driverId], references: [id])

  @@index([driverId])
} 

enum TriggeredBy {
  MANUAL
  AUTO
} 